{
  "slicing_types": {
    "dataslicing": {
      "name": "Data Slicing",
      "description": "Data slicing is a technique used to break down user stories based on the data involved rather than functionality or workflow. This means slicing a requirement based on different data variations, structures, or sets rather than breaking it by feature or UI.",
      "personas": ["Data Engineer", "Database Administrator", "Data Analyst"],
      "focus_areas": [
        "data_collection",
        "data_storage", 
        "data_processing",
        "data_retrieval",
        "data_types",
        "data_structures",
        "data_validation",
        "data_transformation",
        "data_quality",
        "data_governance"
      ],
      "criteria": [
        "Data Processes: Develop stories based on different data processes such as data collection, storage, processing, and retrieval",
        "Data Types: Separate stories for handling different types of data related to feature"
      ]
    },
    "functionalslicing": {
      "name": "Functional Slicing",
      "description": "Functional slicing involves breaking down a feature into independent, end-to-end functional increments that provide tangible value to the user. Each slice focuses on delivering a specific functional capability while ensuring that all necessary backend, business logic, and UI components are included in the slice.",
      "personas": ["Business Analyst", "UI/UX Designer", "Back-End Developer", "Front-End Developer"],
      "focus_areas": [
        "capability_based_slicing",
        "end_to_end_functionality",
        "business_logic",
        "ui_components",
        "api_integration",
        "workflow_management",
        "user_interactions",
        "system_integration"
      ],
      "criteria": [
        "Capability-Based Slicing: Break down the system based on distinct functional capabilities",
        "End-to-End Functionality: Each slice should be fully functional on its own, covering UI, business logic, and data layers where applicable"
      ]
    },
    "securityslicing": {
      "name": "Security Slicing",
      "description": "Security slicing is the practice of breaking down security requirements into smaller, manageable user stories that can be implemented incrementally within Agile development. Instead of treating security as a separate phase, security slicing integrates security measures early and continuously into each sprint.",
      "personas": ["Compliance Officer", "Security Engineer", "Data Privacy Specialist"],
      "focus_areas": [
        "regulatory_requirements",
        "compliance_domains",
        "data_privacy",
        "security_measures",
        "authentication",
        "authorization",
        "encryption",
        "audit_logging",
        "vulnerability_assessment",
        "access_control"
      ],
      "criteria": [
        "Regulatory Requirements: Develop stories based on different compliance and regulatory requirements applicable to the feature or High level requirement or EPIC",
        "Compliance Domains: Separate stories for different compliance domains such as data privacy, security, accessibility, etc."
      ]
    },
    "testdrivenslicing": {
      "name": "Test-Driven Slicing",
      "description": "Test-driven slicing involves breaking down development tasks into smaller, testable user stories, ensuring that each story is built with a clear focus on testing requirements from the outset. The goal is to align development with test scenarios and different layers of testing to ensure quality at every stage.",
      "personas": ["Quality Assurance Engineer", "Security Testing Specialist", "Compliance Testing Specialist", "Automation Engineer"],
      "focus_areas": [
        "test_scenarios",
        "testing_layers",
        "unit_testing",
        "integration_testing",
        "ui_testing",
        "performance_testing",
        "security_testing",
        "automation_testing",
        "regression_testing",
        "acceptance_testing"
      ],
      "criteria": [
        "Test Scenarios: Develop stories based on different test scenarios or cases",
        "Testing Layers: Separate stories for unit testing, integration testing, UI testing, etc."
      ]
    },
    "uislicing": {
      "name": "UI Slicing",
      "description": "UI slicing involves breaking down a user interface into independent, functional increments that align with specific user interactions and journey stages. Each user story should focus on delivering a usable, testable UI experience that integrates seamlessly into the overall application.",
      "personas": ["UX Designer", "UI Developer", "User Researcher"],
      "focus_areas": [
        "experience_driven_design",
        "component_specifications",
        "user_interactions",
        "journey_stages",
        "responsive_design",
        "accessibility",
        "visual_design",
        "interaction_patterns",
        "user_feedback",
        "usability_testing"
      ],
      "criteria": [
        "Experience-Driven Design: Prioritize the user experience by examining how users navigate and interact with the UI, instead of just focusing on visual aesthetics or technical specifications",
        "Generate Component Specifications: For each component, provide detailed specifications that include usability, visual elements, and integration points with other components"
      ]
    },
    "verticalslicing": {
      "name": "Vertical Slicing",
      "description": "Vertical slicing means breaking down requirements into smaller, independent user stories that each deliver a functional increment, ensuring usability at every stage. Each generated user story must be explicitly aligned to user persona, reflecting their goals, pain points, and system interactions.",
      "personas": ["User"],
      "focus_areas": [
        "user_centered_tasks",
        "process_based_vertical",
        "user_experience",
        "end_to_end_value",
        "incremental_delivery",
        "user_journey",
        "feature_completion",
        "business_value"
      ],
      "criteria": [
        "User-Centered Tasks: Each story must reflect the end user's interaction with the system",
        "Process-Based Vertical Slicing: Focus on user experience rather than technical implementation"
      ]
    }
  },
  "validation_criteria": {
    "relevance": {
      "weight": 0.25,
      "description": "How well the response relates to the original HLR and question context"
    },
    "completeness": {
      "weight": 0.20,
      "description": "Whether the response provides sufficient detail and covers all aspects"
    },
    "clarity": {
      "weight": 0.20,
      "description": "How clear and understandable the response is"
    },
    "consistency": {
      "weight": 0.15,
      "description": "How well the response aligns with other provided responses"
    },
    "feasibility": {
      "weight": 0.10,
      "description": "Whether the described requirements are technically and practically feasible"
    },
    "specificity": {
      "weight": 0.10,
      "description": "How specific and actionable the response is"
    }
  },
  "quality_thresholds": {
    "excellent": 0.9,
    "good": 0.7,
    "acceptable": 0.5,
    "poor": 0.3
  }
}